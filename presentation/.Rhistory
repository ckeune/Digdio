install.packages('googleVis')
library("ggplot2", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
library("googleVis", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
install.packages('RJSONIO')
install.packages("RJSONIO")
library("shiny", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
detach("package:shiny", unload=TRUE)
library("shiny", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
detach("package:shiny", unload=TRUE)
library('shiny')
library("shiny")
library("shiny")
library(sjsonio)
library("RJSONIO")
install.packages("RJSONIO")
library(shiny)
library("googleVis", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
library("plyr", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
library("reshape2", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
load(file = 'C:\R\Tester\testerdata.RData')
load("C:/R/Tester/testdata.RData")
load(file = "C:/R/Tester/testdata.RData")
View(station.fb.likes.r2.head)
runApp('c:/r/tester')
View(stationSocial)
stop
runApp('c:/r/tester')
runApp('c:/r/tester')
View(stationSocial)
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
STOP
runApp('c:/R/cr_insights_dash - CK')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
View(cmm_log_st_c)
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
View(gender_vs_time)
View(gender_vs_time)
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
View(gender_vs_time)
View(gender_vs_time)
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
View(gender_vs_time)
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
View(gender_vs_time)
runApp('c:/r/tester')
runApp('c:/r/tester')
library(shiny)
library(shiny)
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')
runApp('c:/r/tester')l
library(googleVis)
library(reshape2)
library(shiny)
library(sqldf)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library("shiny", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
install.packages(c("httpuv", "lubridate"))
install.packages("shiny")
source('~/.active-rstudio-document', echo=TRUE)
library(shiny)
install.packages("XML")
install.packages("XML2R")
# get all the tables in akamaiurl.doc as data frames
source('~/.active-rstudio-document', echo=TRUE)
fix(akamaiurl.doc)
fix(akamaiurl.tabs)
source('C:/R/Tester - Keune/global.R', echo=TRUE)
stationLikes.csv <- read.csv("C:/Users/LaptopM4700/Desktop/station fb likes r2.txt")
View(stationLikes.csv)
source('C:/R/Tester - Keune/global.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(msftstock)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/R/Tester - Keune/server.R', echo=TRUE)
source('C:/R/Tester - Keune/server.R', echo=TRUE)
# library(shiny)
#
ds<-droplevels(ds)
source('C:/R/Tester - Keune/global.R', echo=TRUE)
sdaf
-dsf-
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
df
library(googleVis)
library(reshape2)
library(shiny)
library(sqldf)
library(RCurl)
library(RJSONIO)
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
url <- "https://api.localytics.com/v1/query/?app_id=6c819188aefb48e3624118e-f7651486-9f12-11e3-1b69-004a77f8b47f&days=2&metrics=occurrences&dimensions=hour&conditions[event_name]=Stream_Played"
jsondata <- fromJSON(getURL(url,
.opts=list(userpwd="95d2cb7059cef5f5fb75cbe-f0f84202-9fef-11e3-4180-00a426b17dd8:ce9180376f548d8e9412ae6-f0f845b2-9fef-11e3-4180-00a426b17dd8")))
#
tryjson <- lapply(jsondata, function(x) {
x[sapply(x, is.null)]
unlist(x)
})
do.call("rbind", jsondata)
occurrences = jsondata$results$occurrences
occ = jsondata$results$occurrences
names(occurrences) <- jsondata$results$hour
barplot(occurrences, main = "hours usage", xpd = FALSE)
tryjson <- apply(jsondata, function(x) {
source('~/.active-rstudio-document', echo=TRUE)
asdf
library(googleVis)
library(reshape2)
library(shiny)
library(sqldf)
library(RCurl)
library(RJSONIO)
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
url <- "https://api.localytics.com/v1/query/?app_id=6c819188aefb48e3624118e-f7651486-9f12-11e3-1b69-004a77f8b47f&days=2&metrics=occurrences&dimensions=hour&conditions[event_name]=Stream_Played"
jsondata <- fromJSON(getURL(url,
.opts=list(userpwd="95d2cb7059cef5f5fb75cbe-f0f84202-9fef-11e3-4180-00a426b17dd8:ce9180376f548d8e9412ae6-f0f845b2-9fef-11e3-4180-00a426b17dd8")))
#
tryjson <- apply(jsondata, function(x) {
x[sapply(x, is.null)]
unlist(x)
})
do.call("rbind", jsondata)
occurrences = jsondata$results$occurrences
occ = jsondata$results$occurrences
names(occurrences) <- jsondata$results$hour
barplot(occurrences, main = "hours usage", xpd = FALSE)
sadfadsf
exit
close
f4
quit
asdofinafion
library(RCurl)
library(ggplot2)
### Get list of US states to tie onto dataset, remove Alaska and Hawaii
us.list.of.states <- readHTMLTable("http://www.worldatlas.com/aatlas/populations/usapoptable.htm")[[1]]
us.list.of.states <- us.list.of.states[ c(-2, -11), ]
### Functions to pull monthly and annual data from the NOAA website
getNOAAdataMonth <- function(state.no, month){
zeroes = ifelse(state.no > 9, "0", "00")
state.string = paste(zeroes, state.no, sep="")
data.in <- postForm("http://climvis.ncdc.noaa.gov/cgi-bin/cag3/hr-display3.pl",
data_set = "01",
byear = "1895",
period = month,
lyear = "2012",
strgn = state.string,
bbeg = "1901",
bend = "2000",
trend = "0",
type = "3",
rank = "0",
send.x = "60",
send.y = "8",
spec = "")
data.out <- readHTMLTable(data.in)[[2]]
data.out$state <- us.list.of.states[state.no, 3]
data.out}
getNOAAdataAnnual <- function(state.no){
zeroes = ifelse(state.no > 9, "0", "00")
state.string = paste(zeroes, state.no, sep="")
data.in <- postForm("http://climvis.ncdc.noaa.gov/cgi-bin/cag3/hr-display3.pl",
data_set = "01",
byear = "1895",
period = "17",
lyear = "2012",
strgn = state.string,
bbeg = "1901",
bend = "2000",
trend = "0",
type = "3",
rank = "0",
send.x = "60",
send.y = "8",
spec = "")
data.out <- readHTMLTable(data.in)[[2]]
data.out$state <- us.list.of.states[state.no, 3]
data.out}
### Run function over 48 states
weather.data.annual <- sapply(1:48, function(x) getNOAAdataAnnual(x), simplify=FALSE)
weather.data.march <- sapply(1:48, function(x) getNOAAdataMonth(x, "3"), simplify=FALSE)
### Join lists together into dataframe
weather.data.2 <- do.call("rbind", weather.data.march)
weather.data.annual.2 <- do.call("rbind", weather.data.annual)
### rename columns for easier use
colnames(weather.data.2) <- c("year", "temp", "rank1", "rank2", "state")
### Subset 2012 data for first chart
weather.data.march2012 <- subset(weather.data.2, year==2012)
weather.data.march2012$fill <- ifelse(as.numeric(as.character(weather.data.march2012$rank1))==118, 1, 0)
ggplot(weather.data.march2012, aes(x=state, y=as.numeric(as.character(rank1)), fill=1, label = state))+
geom_tile()+
geom_text(size=3)+
ylab("March 2012 Rank")+
scale_fill_continuous("", low="white", high="red")+
opts(title = "All the red at the top means record temperatures across many states")
### Get list of US states to tie onto dataset, remove Alaska and Hawaii
us.list.of.states <- readHTMLTable("http://www.worldatlas.com/aatlas/populations/usapoptable.htm")[[1]]
us.list.of.states <- us.list.of.states[ c(-2, -11), ]
### Functions to pull monthly and annual data from the NOAA website
getNOAAdataMonth <- function(state.no, month){
zeroes = ifelse(state.no > 9, "0", "00")
state.string = paste(zeroes, state.no, sep="")
data.in <- postForm("http://climvis.ncdc.noaa.gov/cgi-bin/cag3/hr-display3.pl",
data_set = "01",
byear = "1895",
period = month,
lyear = "2012",
strgn = state.string,
bbeg = "1901",
bend = "2000",
trend = "0",
type = "3",
rank = "0",
send.x = "60",
send.y = "8",
spec = "")
data.out <- readHTMLTable(data.in)[[2]]
data.out$state <- us.list.of.states[state.no, 3]
data.out}
getNOAAdataAnnual <- function(state.no){
zeroes = ifelse(state.no > 9, "0", "00")
state.string = paste(zeroes, state.no, sep="")
data.in <- postForm("http://climvis.ncdc.noaa.gov/cgi-bin/cag3/hr-display3.pl",
data_set = "01",
byear = "1895",
period = "17",
lyear = "2012",
strgn = state.string,
bbeg = "1901",
bend = "2000",
trend = "0",
type = "3",
rank = "0",
send.x = "60",
send.y = "8",
spec = "")
data.out <- readHTMLTable(data.in)[[2]]
data.out$state <- us.list.of.states[state.no, 3]
data.out}
### Run function over 48 states
weather.data.annual <- sapply(1:48, function(x) getNOAAdataAnnual(x), simplify=FALSE)
weather.data.march <- sapply(1:48, function(x) getNOAAdataMonth(x, "3"), simplify=FALSE)
### Join lists together into dataframe
weather.data.2 <- do.call("rbind", weather.data.march)
weather.data.annual.2 <- do.call("rbind", weather.data.annual)
install.packages("weatherData")
install.packages("weathermetrics")
library(weatherData)
install.packages(c("httr", "jsonlite", "Rcpp", "shiny", "sqldf", "XML2R", "xtable"))
sessionInfo()
getStationcode("Denver")
getstationcode("Denver")
getStationCode("Denver")
library(weatherData)
sessionInfo()
library(weatherData)
getStationCode("Denver")
library(weatherData)
library("weatherData", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
library("weathermetrics", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
detach("package:weatherData", unload=TRUE)
library("weatherData", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
install.packages("weatherData")
install.packages("weathermetrics")
library(weatherData)
getStationCode("Denver")
library(weatherData)
library("weatherData", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
install.packages("Rccp")
library("weatherData", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
library("weatherData", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
source('C:/R/weatherR/GetWeather2.R', echo=TRUE)
library("jsonlite", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.0.3/library")
library("plyr", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
library("googleVis", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
library("ggplot2", lib.loc="C:/Users/LaptopM4700/Documents/R/win-library/3.0")
install.packages("forecast", repos=c("http://rstudio.org/_packages", "http://cran.rstudio.com"))
library(weatherData)
getStationCode("Denver")
install.package(Rcpp)
install.packages("Rcpp")
library(Rcpp)
library(weatherData)
getStationCode("Denver")
install.packages("Rcpp")
install.packages("Rcpp")
library(weatherData)
getStationCode("Denver")
library(Rcpp)
install.packages("Rcpp")
install.packages("C:/Rcpp/NAMESPACE", repos = NULL)
install.packages("C:/Rcpp/libs/x64/Rcpp.dll", repos = NULL)
install.packages("C:/Rcpp/doc/Rcpp.bib", repos = NULL)
install.packages("reports")
presentation(“your_folder”)
presentation(“your_folder”)
presentation("presentation")
presentation
presentation()
library("reports")
presentation(“your_folder”)
presentation(presentation)
presentation("presentation")
install.packages("kitr")
install.packages("knitr")
library("knitr")
setwd("C:\R\presentation")
setwd("C:\R\presentation\")
setwd("C:/R/presentation")
reveal.js()
getwd
getwd()
reveal.js()
reveal.js
library("reporting")
libary("knitr")
library("knitr")
library("reporting")
library("Reporting")
library("reports)
library("reports")
library(reports)
library(knitr)
library(plyr)
reveal.js()
getwd()
setwd("C:/R/presentation/PRESENTATION")
reveal.js()
getwd()
setwd("C:/R/presentation")
getwd()
reveal.js()
reveal.js()
